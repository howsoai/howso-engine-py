name: Reusable WF - Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      payload:
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:

  pepify:
    uses: "./.github/workflows/pepify.yml"
    with:
      version: ${{ inputs.version }}

  get-howso-engine-details:
    uses: "./.github/workflows/get-dependency-details.yml"
    secrets: inherit
    with:
      owner: "howsoai"
      repo: "howso-engine"
      payload: "${{ inputs.payload }}"

  build:
    needs: ["pepify", "get-howso-engine-details"]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

    - uses: actions/checkout@v3

    - name: Download howso-engine
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh ${{ needs.get-howso-engine-details.outputs.run-type }} download -D howso/howso-engine/tmp -R "howsoai/howso-engine" -p "howso-engine-*" "${{ needs.get-howso-engine-details.outputs.run-id }}"
        # Needed because release/non-release downloads are different structure
        cd howso/howso-engine/tmp && if [ ! -f *.tar.gz ]; then mv */*.tar.gz ./; fi && tar -xvzf *.tar.gz

    - name: Clean up dir
      run: |
        cd howso/howso-engine
        mkdir -p migrations
        mkdir -p trainee
        mv tmp/howso.caml howso.caml
        mv tmp/trainee_template.caml trainee_template.caml
        mv tmp/migrations/migrations.caml migrations/migrations.caml
        mv tmp/version.json version.json
        rm -rf tmp

    - name: Compare Amalagam versions
      if: inputs.payload == ''
      run: |
        cd howso/howso-engine
        engine_amlg_version=$(jq -r ".dependencies.amalgam" ./version.json)
        # Go back to root dir
        cd ../../..
        git clone https://github.com/howsoai/amalgam-lang-py.git
        cd amalgam-lang-py
        # Checkout the latest tag
        git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
        amlg_lang_amlg_version=$(jq -r ".dependencies.amalgam" ./version.json)
        # Check major versions only
        if [[ "${engine_amlg_version:0:1}" != "${amlg_lang_amlg_version:0:1}" ]]; then
          echo "Critical failure: embedded howso-engine specifies Amalgam v${engine_amlg_version}, but latest amalgam-lang-py specifies Amalgam v${amlg_lang_amlg_version}"
          exit 1
        fi
        echo "Embedded howso-engine Amalgam version: ${engine_amlg_version}"
        echo "Latest amalgam-lang-py release Amalgam version: ${amlg_lang_amlg_version}"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user

    - name: Build a binary wheel and a source tarball
      run: >-
        python3 -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
      env:
        SETUPTOOLS_SCM_PRETEND_VERSION: ${{ needs.pepify.outputs.pepified-version }}

    - name: Upload Tarball Artifact
      uses: actions/upload-artifact@v3
      with:
        name: howso-engine-${{ needs.pepify.outputs.pepified-version }}
        path: dist/howso-engine-${{ needs.pepify.outputs.pepified-version }}.tar.gz
        if-no-files-found: error

    - name: Upload Wheel Artifact
      uses: actions/upload-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any
        path: dist/howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any.whl
        if-no-files-found: error

  unit-test-3-8:
    needs: ["build"]
    uses: "./.github/workflows/pytest.yml"
    secrets: inherit
    with:
      python-version: "3.8"
      payload: "${{ inputs.payload }}"

  unit-test-3-9:
    needs: ["build"]
    uses: "./.github/workflows/pytest.yml"
    secrets: inherit
    with:
      python-version: "3.9"
      payload: "${{ inputs.payload }}"

  unit-test-3-10:
    needs: ["build"]
    uses: "./.github/workflows/pytest.yml"
    secrets: inherit
    with:
      python-version: "3.10"
      payload: "${{ inputs.payload }}"

  unit-test-3-11:
    needs: ["build"]
    uses: "./.github/workflows/pytest.yml"
    secrets: inherit
    with:
      python-version: "3.11"
      payload: "${{ inputs.payload }}"

  install-verification-linux-amd64:
    needs: ['pepify', 'build']
    runs-on: ubuntu-latest
    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Verify Howso install
      run: |
        echo "Installing Howso Engine..."
        pip install howso_engine-*-py3-none-any.whl

        echo "Running Howso verification..."
        verify_howso_install

  install-verification-linux-arm64:
    needs: ['pepify', 'build']
    runs-on: ubuntu-latest
    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Verify Howso install
      uses: pguyot/arm-runner-action@v2
      with:
        base_image: raspios_lite_arm64:latest
        cpu: cortex-a8
        image_additional_mb: 1000
        commands: |
          set -e
          PATH=$PATH:/usr/aarch64-linux-gnu
          sudo apt-get install --no-install-recommends -y python3 python3-pip python-is-python3
          python --version

          echo "Installing Howso Engine..."
          pip install howso_engine-*-py3-none-any.whl

          echo "Running Howso verification..."
          verify_howso_install

  install-verification-linux-arm64_8a:
    needs: ['pepify', 'build']
    runs-on: ubuntu-latest
    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Verify Howso install
      uses: pguyot/arm-runner-action@v2
      with:
        base_image: raspios_lite_arm64:latest
        cpu: cortex-a7
        image_additional_mb: 1000
        commands: |
          set -e
          PATH=$PATH:/usr/aarch64-linux-gnu
          sudo apt-get install --no-install-recommends -y python3 python3-pip python-is-python3
          python --version

          echo "Installing Howso Engine..."
          pip install howso_engine-*-py3-none-any.whl

          # Set local config to use single threaded because arm64_8a doesn't support multi-threading and set
          # arm64_8a arch since that is not auto selected by the package currently:
          echo "
          howso:
            client: howso.direct.HowsoDirectClient
            client_extra_params:
              amalgam:
                arch: arm64_8a
                library_postfix: -st
          " > howso.yml

          echo "Running Howso verification..."
          verify_howso_install

  install-verification-windows-bash-amd64:
    needs: ['pepify', 'build']
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v3

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Download tz data
      shell: pwsh
      run: |
        ./build/powershell/Download-Tzdata.ps1

    - name: Verify Howso install
      run: |
        echo "Installing Howso Engine..."
        pip install howso_engine-*-py3-none-any.whl

        echo "Running Howso verification..."
        PYTHONUTF8=1 verify_howso_install

  install-verification-windows-cmd-amd64:
    needs: ['pepify', 'build']
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v3

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Download tz data
      shell: pwsh
      run: |
        ./build/powershell/Download-Tzdata.ps1

    - name: Verify Howso install
      shell: cmd
      run: |
        @echo off
        echo Installing Howso Engine...
        REM Globs don't work in cmd with pip
        pip install howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

        echo Running Howso verification...
        verify_howso_install

  install-verification-windows-pwsh-amd64:
    needs: ['pepify', 'build']
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v3

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Download tz data
      shell: pwsh
      run: |
        ./build/powershell/Download-Tzdata.ps1

    - name: Verify Howso install
      shell: pwsh
      run: |
        echo "Installing Howso Engine...""
        pip install howso_engine-*-py3-none-any

        echo "Running Howso verification..."
        verify_howso_install

  install-verification-macos-amd64:
    needs: ['pepify', 'build']
    runs-on: macos-latest
    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: howso_engine-${{ needs.pepify.outputs.pepified-version }}-py3-none-any

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Verify Howso install
      run: |
        echo "Installing Howso Engine..."
        pip install howso_engine-*-py3-none-any.whl

        # Set local config to use mt-noavx because GitHub hosted runners don't have AVX:
        echo "
        howso:
          client: howso.direct.HowsoDirectClient
          client_extra_params:
            amalgam:
              library_postfix: -mt-noavx
        " > howso.yml

        echo "Running Howso verification..."
        verify_howso_install
