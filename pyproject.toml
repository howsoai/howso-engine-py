[build-system]
requires = ["setuptools>=68.0.0", "wheel~=0.40.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "howso-engine"
dynamic = ["version"]
readme = "README.md"
description = "The Howso Engineâ„¢ is a natively and fully explainable ML engine, serving as an alternative to black box AI neural networks."
authors = [
    {name = "Howso Incorporated"},
    {email = "support@howso.com"},
]
requires-python = ">=3.9"
keywords = ["machine", "learning", "artificial", "intelligence"]
license = {file = "LICENSE.txt"}
classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Science/Research",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "License :: OSI Approved :: GNU Affero General Public License v3",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
        "Operating System :: MacOS",
        "Operating System :: MacOS :: MacOS X",
        "Operating System :: Microsoft :: Windows",
        "Operating System :: Microsoft :: Windows :: Windows 10",
        "Operating System :: Microsoft :: Windows :: Windows 11",
        "Operating System :: POSIX :: Linux",
]
dependencies = [
   "certifi",
   "cryptography>=2.9.2",
   "deprecation~=2.0",
   "Faker>=4.1.1",
   "humanize>=4.0.0",
   "mmh3",
   "numpy",
   "pandas",
   "pyjwt~=2.0",
   "pyyaml~=6.0",
   "requests>=2.0,<3.0",
   "rich>=12.5.1",
   "semantic-version~=2.0",
   "typing-extensions~=4.9",
   "amalgam-lang==19.0.0", # Use exact since Engine is exact in version.json
]

[project.optional-dependencies]
dev = [
   "dill~=0.0",
   "flake8-docstrings",
   "flake8-import-order",
   "flake8~=3.0",
   "flake8-unused-arguments",
   "mongomock",
   "pip-tools",
   "pipdeptree",
   "pmlb",
   "pycodestyle",
   "pylint",
   "pyright",
   "pytest<8.0",
   "pytest-cov",
   "pytest-xdist",
   "pytest-mock~=1.0,<1.14.0",
   "ruff",
]
no-telemetry = [
    "howso-engine-no-telemetry",
]
scikit = [
    "scikit-learn~=1.5"
]

[project.urls]
homepage = "https://howso.com"
documentation = "https://docs.howso.com/"
repository = "https://github.com/howsoai/howso-engine-py"

[project.scripts]
verify_howso_install = "howso.utilities.installation_verification:main"

[tool.setuptools]
packages = ["howso"]

[tool.isort]
profile = "google"
known_first_party = [
    "howso.client",
    "howso.connectors",
    "howso.direct",
    "howso.engine",
    "howso.scikit",
    "howso.utilities",
]
line_length = 119
group_by_package = true
force_single_line = false
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 2

[tool.yapf]
based_on_style = "pep8"
column_limit = 119
dedent_closing_brackets = true
split_penalty_after_opening_bracket = 100
split_penalty_for_added_line_split = 300

# version is managed by setuptools_scm
[tool.setuptools_scm]

# Linting and static analysis tools

[tool.pyright]
typeCheckingMode = "strict"
reportMissingTypeStubs = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"
reportPrivateUsage = "none"

[tool.ruff]
line-length = 119
indent-width = 4

[tool.ruff.lint]
select = [
    # "E", # pycodestyle
    # "W", # pycodestyle warnings
    # "D", # pycodestyle docstrings
    # "F", # Pyflakes
    # "UP", # pyupgrade
    # "B", # flake8-bugbear
    # "SIM", # flake8-simplify
    # flake-8-unused-args
    "ARG", # Unused arguments
    # "I", # isort Intentionally left out
    # "C", # flake8-comprehensions
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "UP038", # Prefer X | Y over (X, Y) in isinstance (ignore since its slower)
    "UP007", # Allow Optional[T] instead of forcing T | None
    "UP035", # Allow deprecated imports. Required for from typing_extensions import TypeAlias and 3.9 support.
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
